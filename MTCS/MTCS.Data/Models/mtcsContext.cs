// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace MTCS.Data.Models;

public partial class MTCSContext : DbContext
{
    public MTCSContext()
    {
    }

    public MTCSContext(DbContextOptions<MTCSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Contract> Contracts { get; set; }

    public virtual DbSet<ContractFile> ContractFiles { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<DeliveryReport> DeliveryReports { get; set; }

    public virtual DbSet<DeliveryReportsFile> DeliveryReportsFiles { get; set; }

    public virtual DbSet<DeliveryStatus> DeliveryStatuses { get; set; }

    public virtual DbSet<Driver> Drivers { get; set; }

    public virtual DbSet<DriverDailyWorkingTime> DriverDailyWorkingTimes { get; set; }

    public virtual DbSet<DriverFile> DriverFiles { get; set; }

    public virtual DbSet<FuelReport> FuelReports { get; set; }

    public virtual DbSet<FuelReportFile> FuelReportFiles { get; set; }

    public virtual DbSet<IncidentReport> IncidentReports { get; set; }

    public virtual DbSet<IncidentReportsFile> IncidentReportsFiles { get; set; }

    public virtual DbSet<InspectionLog> InspectionLogs { get; set; }

    public virtual DbSet<InternalUser> InternalUsers { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderFile> OrderFiles { get; set; }

    public virtual DbSet<PriceTable> PriceTables { get; set; }

    public virtual DbSet<Tractor> Tractors { get; set; }

    public virtual DbSet<TractorFile> TractorFiles { get; set; }

    public virtual DbSet<Trailer> Trailers { get; set; }

    public virtual DbSet<TrailerFile> TrailerFiles { get; set; }

    public virtual DbSet<Trip> Trips { get; set; }

    public virtual DbSet<TripStatusHistory> TripStatusHistories { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(GetConnectionString());
    }

    private string GetConnectionString()
    {
        IConfiguration configuration = new ConfigurationBuilder()
        .SetBasePath(Directory.GetCurrentDirectory())
        .AddJsonFile("appsettings.json", true, true).Build();
        return configuration["ConnectionStrings:DefaultConnection"];
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Contract>(entity =>
        {
            entity.HasKey(e => e.ContractId).HasName("PK__Contract__C90D34695F198265");

            entity.ToTable("Contract");

            entity.Property(e => e.ContractId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");

            entity.HasOne(d => d.Customer).WithMany(p => p.Contracts)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK_Contract_Customer");
        });

        modelBuilder.Entity<ContractFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__Contract__6F0F98BF0D768B98");

            entity.ToTable("ContractFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ContractId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Contract).WithMany(p => p.ContractFiles)
                .HasForeignKey(d => d.ContractId)
                .HasConstraintName("FK__ContractF__Contr__68487DD7");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64D8A5B966E7");

            entity.ToTable("Customer");

            entity.Property(e => e.CustomerId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Address).HasMaxLength(500);
            entity.Property(e => e.CompanyName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.CreatedBy).IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedBy).IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
            entity.Property(e => e.TaxNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DeliveryReport>(entity =>
        {
            entity.HasKey(e => e.ReportId).HasName("PK__Delivery__D5BD4805E3ECD3CE");

            entity.Property(e => e.ReportId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ReportTime).HasColumnType("datetime");
            entity.Property(e => e.TripId)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.Trip).WithMany(p => p.DeliveryReports)
                .HasForeignKey(d => d.TripId)
                .HasConstraintName("FK__DeliveryR__TripI__160F4887");
        });

        modelBuilder.Entity<DeliveryReportsFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__Delivery__6F0F98BF9434B533");

            entity.ToTable("DeliveryReportsFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.ReportId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Report).WithMany(p => p.DeliveryReportsFiles)
                .HasForeignKey(d => d.ReportId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DeliveryR__Repor__18EBB532");
        });

        modelBuilder.Entity<DeliveryStatus>(entity =>
        {
            entity.HasKey(e => e.StatusId).HasName("PK__Delivery__C8EE20637B5FD383");

            entity.ToTable("DeliveryStatus");

            entity.Property(e => e.StatusId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.StatusName)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<Driver>(entity =>
        {
            entity.HasKey(e => e.DriverId).HasName("PK__Driver__F1B1CD04131B0750");

            entity.ToTable("Driver");

            entity.Property(e => e.DriverId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedBy).IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).IsUnicode(false);
            entity.Property(e => e.FullName).IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DriverDailyWorkingTime>(entity =>
        {
            entity.HasKey(e => e.RecordId).HasName("PK__DriverDa__FBDF78E95831D941");

            entity.ToTable("DriverDailyWorkingTime");

            entity.Property(e => e.RecordId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.DriverId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedBy).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

            entity.HasOne(d => d.Driver).WithMany(p => p.DriverDailyWorkingTimes)
                .HasForeignKey(d => d.DriverId)
                .HasConstraintName("FK__DriverDai__Drive__22751F6C");
        });

        modelBuilder.Entity<DriverFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__DriverFi__6F0F98BF7E05AABD");

            entity.ToTable("DriverFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.DriverId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Driver).WithMany(p => p.DriverFiles)
                .HasForeignKey(d => d.DriverId)
                .HasConstraintName("FK__DriverFil__Drive__628FA481");
        });

        modelBuilder.Entity<FuelReport>(entity =>
        {
            entity.HasKey(e => e.ReportId).HasName("PK__FuelRepo__D5BD4805641BE5DD");

            entity.ToTable("FuelReport");

            entity.Property(e => e.ReportId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.FuelCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.RefuelAmount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.ReportTime).HasColumnType("datetime");
            entity.Property(e => e.TripId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.Trip).WithMany(p => p.FuelReports)
                .HasForeignKey(d => d.TripId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FuelRepor__TripI__07C12930");
        });

        modelBuilder.Entity<FuelReportFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__FuelRepo__6F0F98BF272220FD");

            entity.ToTable("FuelReportFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.ReportId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadBy).IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Report).WithMany(p => p.FuelReportFiles)
                .HasForeignKey(d => d.ReportId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FuelRepor__Repor__0A9D95DB");
        });

        modelBuilder.Entity<IncidentReport>(entity =>
        {
            entity.HasKey(e => e.ReportId).HasName("PK__Incident__D5BD48058957656C");

            entity.Property(e => e.ReportId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.HandledBy)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.HandledTime).HasColumnType("datetime");
            entity.Property(e => e.IncidentTime).HasColumnType("datetime");
            entity.Property(e => e.IncidentType).HasMaxLength(255);
            entity.Property(e => e.ReportedBy).HasMaxLength(255);
            entity.Property(e => e.Status)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.TripId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.Trip).WithMany(p => p.IncidentReports)
                .HasForeignKey(d => d.TripId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__IncidentR__TripI__1CBC4616");
        });

        modelBuilder.Entity<IncidentReportsFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__Incident__6F0F98BFE1E93A8A");

            entity.ToTable("IncidentReportsFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.ReportId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Report).WithMany(p => p.IncidentReportsFiles)
                .HasForeignKey(d => d.ReportId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__IncidentR__Repor__1F98B2C1");
        });

        modelBuilder.Entity<InspectionLog>(entity =>
        {
            entity.HasKey(e => e.InspectionId).HasName("PK__Inspecti__30B2DC08ACA20906");

            entity.Property(e => e.InspectionId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.InspectionDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TractorStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TrailerStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TripId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.VehicleRegistration)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Trip).WithMany(p => p.InspectionLogs)
                .HasForeignKey(d => d.TripId)
                .HasConstraintName("FK__Inspectio__TripI__0D7A0286");
        });

        modelBuilder.Entity<InternalUser>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Internal__1788CC4C3ADA4174");

            entity.ToTable("InternalUser");

            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.FullName).HasMaxLength(255);
            entity.Property(e => e.Gender)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Orders__C3905BCF01DA6AEF");

            entity.Property(e => e.OrderId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ContactPhone)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.ContainerNumber)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CustomerId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.Temperature).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.TrackingCode).IsUnicode(false);
            entity.Property(e => e.Weight).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Customer).WithMany(p => p.Orders)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_Customer");
        });

        modelBuilder.Entity<OrderFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__OrderFil__6F0F98BFB5C36FFA");

            entity.ToTable("OrderFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.FileUrl).IsUnicode(false);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.OrderId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderFiles)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderFile__Order__7F2BE32F");
        });

        modelBuilder.Entity<PriceTable>(entity =>
        {
            entity.HasKey(e => e.PriceId).HasName("PK__PriceTab__49575BAF99AA0438");

            entity.ToTable("PriceTable");

            entity.Property(e => e.PriceId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ContainerSize).HasMaxLength(50);
            entity.Property(e => e.ContainerType).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.MaxPricePerKm).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.MinPricePerKm).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Tractor>(entity =>
        {
            entity.HasKey(e => e.TractorId).HasName("PK__Tractor__46B2DC30F327396B");

            entity.ToTable("Tractor");

            entity.Property(e => e.TractorId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Brand)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedBy).HasMaxLength(100);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.LastMaintenanceDate).HasColumnType("datetime");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.MaxLoadWeight).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ModifiedBy).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.NextMaintenanceDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TractorFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__TractorF__6F0F98BF4651926A");

            entity.ToTable("TractorFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.ModifiedBy).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.TractorsId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadBy).IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Tractors).WithMany(p => p.TractorFiles)
                .HasForeignKey(d => d.TractorsId)
                .HasConstraintName("FK__TractorFi__Tract__41EDCAC5");
        });

        modelBuilder.Entity<Trailer>(entity =>
        {
            entity.HasKey(e => e.TrailerId).HasName("PK__Trailer__1B041D2340859B60");

            entity.ToTable("Trailer");

            entity.Property(e => e.TrailerId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Brand)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy).HasMaxLength(100);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedBy).HasMaxLength(100);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.LastMaintenanceDate).HasColumnType("datetime");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.MaxLoadWeight).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ModifiedBy).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.NextMaintenanceDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TrailerFile>(entity =>
        {
            entity.HasKey(e => e.FileId).HasName("PK__TrailerF__6F0F98BF2C3A7509");

            entity.ToTable("TrailerFile");

            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.FileName).IsUnicode(false);
            entity.Property(e => e.FileType).IsUnicode(false);
            entity.Property(e => e.ModifiedBy).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.TrailerId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UploadBy).IsUnicode(false);
            entity.Property(e => e.UploadDate).HasColumnType("datetime");

            entity.HasOne(d => d.Trailer).WithMany(p => p.TrailerFiles)
                .HasForeignKey(d => d.TrailerId)
                .HasConstraintName("FK__TrailerFi__Trail__44CA3770");
        });

        modelBuilder.Entity<Trip>(entity =>
        {
            entity.HasKey(e => e.TripId).HasName("PK__Trips__51DC713E5E83DD00");

            entity.Property(e => e.TripId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Distance).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.DriverId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.MatchBy).HasMaxLength(255);
            entity.Property(e => e.MatchTime).HasColumnType("datetime");
            entity.Property(e => e.OrderId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.TractorId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TrailerId)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.Driver).WithMany(p => p.Trips)
                .HasForeignKey(d => d.DriverId)
                .HasConstraintName("FK__Trips__DriverId__02FC7413");

            entity.HasOne(d => d.Order).WithMany(p => p.Trips)
                .HasForeignKey(d => d.OrderId)
                .HasConstraintName("FK__Trips__OrderId__02084FDA");

            entity.HasOne(d => d.Tractor).WithMany(p => p.Trips)
                .HasForeignKey(d => d.TractorId)
                .HasConstraintName("FK__Trips__TractorId__03F0984C");

            entity.HasOne(d => d.Trailer).WithMany(p => p.Trips)
                .HasForeignKey(d => d.TrailerId)
                .HasConstraintName("FK__Trips__TrailerId__04E4BC85");
        });

        modelBuilder.Entity<TripStatusHistory>(entity =>
        {
            entity.HasKey(e => e.HistoryId).HasName("PK__TripStat__4D7B4ABDC197EC4A");

            entity.ToTable("TripStatusHistory");

            entity.Property(e => e.HistoryId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ChangeTime).HasColumnType("datetime");
            entity.Property(e => e.StatusId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TripId)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.Status).WithMany(p => p.TripStatusHistories)
                .HasForeignKey(d => d.StatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TripStatu__Statu__1332DBDC");

            entity.HasOne(d => d.Trip).WithMany(p => p.TripStatusHistories)
                .HasForeignKey(d => d.TripId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TripStatu__TripI__123EB7A3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}